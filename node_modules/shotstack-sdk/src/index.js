/**
 * Shotstack
 * The Shotstack API is a video editing service that allows for the automated creation of videos using JSON. You can configure an edit and POST it to the Shotstack API which will render your video and provide a file location when complete. For more details check https://shotstack.io
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.2.1
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient','model/Asset',  'model/AudioAsset', 'model/Clip', 'model/Edit', 'model/Font', 'model/HtmlAsset', 'model/ImageAsset', 'model/LumaAsset', 'model/Offset', 'model/Output', 'model/Poster', 'model/QueuedResponse', 'model/QueuedResponseData', 'model/RenderResponse', 'model/RenderResponseData', 'model/Soundtrack', 'model/Thumbnail', 'model/Timeline', 'model/TitleAsset', 'model/Track', 'model/Transition', 'model/VideoAsset', 'api/EndpointsApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Asset'), require('./model/AudioAsset'), require('./model/Clip'), require('./model/Edit'), require('./model/Font'), require('./model/HtmlAsset'), require('./model/ImageAsset'), require('./model/LumaAsset'), require('./model/Offset'), require('./model/Output'), require('./model/Poster'), require('./model/QueuedResponse'), require('./model/QueuedResponseData'), require('./model/RenderResponse'), require('./model/RenderResponseData'), require('./model/Soundtrack'), require('./model/Thumbnail'), require('./model/Timeline'), require('./model/TitleAsset'), require('./model/Track'), require('./model/Transition'), require('./model/VideoAsset'), require('./api/EndpointsApi'));
  }
}(function(ApiClient, Asset, AudioAsset, Clip, Edit, Font, HtmlAsset, ImageAsset, LumaAsset, Offset, Output, Poster, QueuedResponse, QueuedResponseData, RenderResponse, RenderResponseData, Soundtrack, Thumbnail, Timeline, TitleAsset, Track, Transition, VideoAsset, EndpointsApi) {
  'use strict';

  /**
   * The_Shotstack_API_is_a_video_editing_service_that_allows_for_the_automated_creation_of_videos_using_JSON__You_can_configure_an_edit_and_POST_it_to_the_Shotstack_API_which_will_render_your_video_and_provide_a_file_location_when_complete__For_more_details_check_https__shotstack_io.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var ShotstackSdk = require('index'); // See note below*.
   * var xxxSvc = new ShotstackSdk.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new ShotstackSdk.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new ShotstackSdk.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new ShotstackSdk.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version v1
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Asset model constructor.
     * @property {module:model/Asset}
     */
    Asset: Asset,
    /**
     * The AudioAsset model constructor.
     * @property {module:model/AudioAsset}
     */
    AudioAsset: AudioAsset,
    /**
     * The Clip model constructor.
     * @property {module:model/Clip}
     */
    Clip: Clip,
    /**
     * The Edit model constructor.
     * @property {module:model/Edit}
     */
    Edit: Edit,
    /**
     * The Font model constructor.
     * @property {module:model/Font}
     */
    Font: Font,
    /**
     * The HtmlAsset model constructor.
     * @property {module:model/HtmlAsset}
     */
    HtmlAsset: HtmlAsset,
    /**
     * The ImageAsset model constructor.
     * @property {module:model/ImageAsset}
     */
    ImageAsset: ImageAsset,
    /**
     * The LumaAsset model constructor.
     * @property {module:model/LumaAsset}
     */
    LumaAsset: LumaAsset,
    /**
     * The Offset model constructor.
     * @property {module:model/Offset}
     */
    Offset: Offset,
    /**
     * The Output model constructor.
     * @property {module:model/Output}
     */
    Output: Output,
    /**
     * The Poster model constructor.
     * @property {module:model/Poster}
     */
    Poster: Poster,
    /**
     * The QueuedResponse model constructor.
     * @property {module:model/QueuedResponse}
     */
    QueuedResponse: QueuedResponse,
    /**
     * The QueuedResponseData model constructor.
     * @property {module:model/QueuedResponseData}
     */
    QueuedResponseData: QueuedResponseData,
    /**
     * The RenderResponse model constructor.
     * @property {module:model/RenderResponse}
     */
    RenderResponse: RenderResponse,
    /**
     * The RenderResponseData model constructor.
     * @property {module:model/RenderResponseData}
     */
    RenderResponseData: RenderResponseData,
    /**
     * The Soundtrack model constructor.
     * @property {module:model/Soundtrack}
     */
    Soundtrack: Soundtrack,
    /**
     * The Thumbnail model constructor.
     * @property {module:model/Thumbnail}
     */
    Thumbnail: Thumbnail,
    /**
     * The Timeline model constructor.
     * @property {module:model/Timeline}
     */
    Timeline: Timeline,
    /**
     * The TitleAsset model constructor.
     * @property {module:model/TitleAsset}
     */
    TitleAsset: TitleAsset,
    /**
     * The Track model constructor.
     * @property {module:model/Track}
     */
    Track: Track,
    /**
     * The Transition model constructor.
     * @property {module:model/Transition}
     */
    Transition: Transition,
    /**
     * The VideoAsset model constructor.
     * @property {module:model/VideoAsset}
     */
    VideoAsset: VideoAsset,
    /**
     * The EndpointsApi service constructor.
     * @property {module:api/EndpointsApi}
     */
    EndpointsApi: EndpointsApi
  };

  return exports;
}));
